apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Config.compile_sdk
    defaultConfig {
        applicationId Config.application_id
        minSdkVersion Config.min_sdk
        targetSdkVersion Config.target_sdk
        versionCode Releases.version_code
        versionName Releases.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Config.java_version
        targetCompatibility Config.java_version
    }
    //динамически загружаемый контент — модуль historyScreen
    dynamicFeatures = [Modules.historyScreen]
}

dependencies {

    implementation 'com.google.android.play:core:1.10.0'

    implementation project(Modules.core)
    implementation project(Modules.model)
    implementation project(Modules.utils)
    implementation project(Modules.repository)
    //implementation project(Modules.historyScreen)

    //Kotlin
    implementation Kotlin.core
    implementation Kotlin.stdlib
    //Coroutines
    implementation Kotlin.coroutines_core
    implementation Kotlin.coroutines_android

    //Design
    //You should not use the com.android.support and com.google.android.material dependencies in your app at the same time
    implementation Design.appcompat
    implementation Design.material
    //recyclerview
    implementation Recyclerview.recycler_view
    //swiperefreshlayout
    implementation Swiperefreshlayout.swiperefreshlayout

    //Retrofit 2
    implementation Retrofit.retrofit
    implementation Retrofit.converter_gson
    implementation Retrofit.logging_interceptor
    implementation  Retrofit.adapter_coroutines

    //picasso
    implementation Picasso.picasso

    //Koin
    implementation Koin.koin_android
    implementation Koin.koin_view_model

    // Room
    implementation Room.runtime
    kapt Room.compiler
    implementation Room.room_ktx

    //Tes1
    testImplementation TestImpl.junit
    androidTestImplementation TestImpl.runner
    androidTestImplementation TestImpl.espresso
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
